body {
    font-family: "Lucida Console", Lucida, monospace;
    
}

p {
    color: lightgray;
    text-align: justify;
    
}

h1 {
    font-size: 2.5rem;
    color: white;
}

h2 {
    font-size: 1.875rem;
    color: white;
}

h3 {
    font-size: 1.5rem;
    color: palevioletred;
    text-decoration: line-through;
    text-align: center;
    margin: 1rem;
}



a {
    text-decoration: none;
}

a:link {
    color: lightgray;
}

a:visited {
    color: lightgray;
}

a:hover {
    color: hotpink;
}

a:active {
    color: mediumvioletred;
}

.nav {
    background-color: black;
    position: relative;
    border-radius: 1rem;
    margin-bottom: 1rem;
}

.container {
    width: 100%;
    }

.column {
    background-color: black;
    position: relative;
    border-radius: 1rem;
    padding: 1rem;
    margin: 1rem;
    }

.pressme {
    width:100%;
    background-color: palevioletred;
    color: black;
    text-align: center;
    text-decoration: line-through;
    border-radius: 1rem;
    font-size: 1.5rem;
    font-weight: bold;
    padding-top: .5rem;
    padding-bottom: .5rem; 
    
}

.pressme:hover {
    background-color: white;
    color: black;
    transform: rotate(180deg);
}

#fortune {
    text-align: center;
}

#db {
    text-align: center;
}

#cookie {
    text-align: center;
}

/*styling for mobile*/
@media only screen and (max-width : 767px) {
.menu {
    width: 100%;
    text-align: center;
    margin-bottom: 1rem;      
}
/* making the width of the menu items 100% at mobile breakpoints causes the items to stack */

.nav {
    padding: 1rem;
}


}

/* styling for desktop & tablet */
@media only screen and (min-width : 768px) {
 
    /* at larger screens, the columns are sized to a smaller percentage so they align horizontally,
    and by calling each column's specific id, i float them to either side of the display port */

.column {
    width: 40%;
    
}

#db {
    float:left;
    position:relative;
}

#fortune {
    right:1rem;
    position:absolute;
    bottom: 50%;
}

/* these positioning rules are what allow for the menu items to be positioned horizontally in a different order than they are established in the html,
while at mobile breakpoint, they default to appearing in the order they're written in the html */

.twitter {
    position: absolute;
    bottom: 25%;   
    left: 1rem;
     
}

.title {
    position: relative;
    top: 50%;
    text-align: center;
   
}



.podcast {
    position: absolute;
    bottom: 25%;
    right: 1rem;
   }
}

